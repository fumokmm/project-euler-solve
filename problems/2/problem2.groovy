/* http://projecteuler.net/problem=2
 *
 * Problem 2
 * 19 October 2001
 *
 * Each new term in the Fibonacci sequence is generated by adding the previous two terms.
 * By starting with 1 and 2, the first 10 terms will be:
 *
 * 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
 *
 * By considering the terms in the Fibonacci sequence whose values do not exceed four million,
 * find the sum of the even-valued terms.
 */

def fibo(Closure filters = {it}) {
  def (a, b) = [0G, 1G]
  [ hasNext: {true},
    next: {
      def rslt = null
      while(! rslt) {
        rslt = filters(
          {-> fiboNum = b
              (na, nb) = [b, a+b]
              (a, b) = [na, nb]
              fiboNum }()
        )
      }
      rslt
    }
  ] as Iterator
}

def sum = 0
for (f in fibo{it % 2 == 0 ? it : null}) {
  if (! (f < 4000000)) break
  sum += f
}
assert sum == 4613732